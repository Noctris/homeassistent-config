######################################################################################################
###Script to actually send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # speech_message:
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################

speech_processing:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: 'polly/lastmsg'
        payload: "This message is from {{ now().strftime('%-I') }}:{{ now().strftime('%M') }} {{ now().strftime('%p') }}. {{ speech_message | truncate(220)}}"
        retain: true

    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: group.inhabitants
              state: 'home'
            - condition: state
              entity_id: input_boolean.guest_mode
              state: 'on'
        - condition: or
          conditions:
            - condition: and
              conditions:
                # - condition: state
                #   entity_id: group.bed
                #   state: 'off'
                - condition: time
                  after: '08:00:00'
                  before: '23:00:00'
            - condition: state
              entity_id: input_boolean.alert_mode
              state: 'on'
        - condition: state
          entity_id: input_boolean.speech_notifications
          state: 'on'
# No amp to turn on here
    # - service: switch.turn_on
    #   entity_id: switch.lr_amp

    - service: media_player.volume_set
      data_template:
        entity_id: >
          {{ media_player }}
        volume_level: >-
          {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
            0.4
          {% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int < 20 %}
            0.7
          {% else %}
            0.3
          {% endif %}
    # - service: media_player.alexa_tts
    #   data_template:
    #     entity_id: >
    #       {% if states.group.bed.state == 'off' %}
    #       media_player.office
    #       {% else %}
    #       media_player.office
    #       {% endif %}
    #     message: >-
    #         {{ speech_message }}

    - service: tts.amazon_polly_say
      data_template:
        entity_id: >
          {% if states.input_boolean.bedtime.state == 'off' %}
          media_player.living_room_notifier
          {% else %}
          media_player.master_bedroom_speaker
          {% endif %}
        message: >-
            <speak>
            <amazon:effect phonation="soft">
            {{ speech_message }}
            </amazon:effect>
            </speak>
        cache: true

    - service: input_boolean.turn_off
      data:
        entity_id:
          - input_boolean.alert_mode
          - input_boolean.lastmsg